
#define CMD_WRITE 0x10
#define CMD_READ 0x11
#define CMD_DELETE 0x12

char CKS_POS=4; 

char PacketMarker = 0;

char ifup[] = {0x00, 0x00, CMD_WRITE, 0x08, 0x18};
char ifdown[] = {0x00, 0x00, CMD_WRITE, 0x07, 0x17};
char ComClear[] = {0x00, 0x00, CMD_WRITE, 0x00, 0x10};
char Reset[] = {0x00, 0x00, CMD_WRITE, 0x03, 0x13};
char Status[] = {0x00, 0x00, CMD_READ, 0x05, 0x14}; //Look the answer in the KBI pdf
char Uptime[] = {0x00, 0x00, CMD_READ, 0x02, 0x13};
char ThreadVersion[] = {0x00, 0x00, CMD_READ, 0x01, 0x10};
char Ping[] = {0x00, 0x12, CMD_WRITE, 0x06}; //Añadir CKS + direccion ipv6 (16 bytes)+ PayloadRandom
char OpenSocket[] = {0x00, 0x02, CMD_WRITE, 0x09, 0x012, 0x30, 0x39}; //abrir socket en puerto 12345
char OpenSocket2[] = {0x00, 0x02, CMD_WRITE, 0x09, 0x012, 0x30, 0x30};
char CloseSocket[] =  {0x00, 0x02, CMD_DELETE, 0x09, 0x012, 0x30, 0x39};
char ReadEui64Address[] = {0x00, 0x00, CMD_READ, 0x0E, 0x0F};
char ReadPowerMode[] ={0x00, 0x00, CMD_READ, 0x0f, 0x1e};
char PowerModeOn[] ={0x00, 0x00, CMD_WRITE, 0x0f, 0x1f};
char PowerModeOff[] ={0x00, 0x00, CMD_DELETE, 0x0f, 0x1d};
char ReadTxPower[] = {0x00, 0x00, CMD_READ, 0x10, 0x01};
char WriteTxPower[] = {0x00, 0x01, CMD_WRITE,0x10, 0x0a, 0x0b}; //-4dbm
char ReadChannel[] = {0x00, 0x00, CMD_READ, 0x12, 0x03};
char WriteChannel[] = {0x00, 0x01, CMD_WRITE, 0x12, 0x08}; //Channel 15 predefined, change last char to change channell between 11-26
char ReadRole[] = {0x00, 0x00, CMD_READ, 0x19, 0x08};
char SendHello[] = {0x00, 0x1a, CMD_WRITE, 0x2f, 0x06, 0x30, 0x39, 0x30, 0x30, 0xab, 0xcd, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x34, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x21};
char ReadIp[] = {0x00, 0x00, CMD_READ, 0x20, 0x31};
char WriteIPLeader[] = {0x00, 0x10, CMD_WRITE, 0x20, 0x60, 0xab, 0xcd, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x34};
char WriteIP[] = {0x00, 0x10, CMD_WRITE, 0x20, 0x60, 0xab, 0xcd, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x12};
char JoinPort[] = {0x00, 0x02, CMD_WRITE,0x21, 0x00, 0x30, 0x39};

char OOB[] = {0x00, 0x00, CMD_WRITE, 0x24,0x34}; 
char WritePANID[] = {0x00, 0x02, CMD_WRITE, 0x11, 0x25};
char WriteNetName[] = {0x00,0x09, CMD_WRITE, 0x14, 0x67};
char WriteMLocPref[] = {0x00, 0x08, CMD_WRITE, 0x1c, 0x89};
char WriteMK[] = {0x00, 0x10, CMD_WRITE, 0x15, 0x15};
char WriteExtPID[] = {0x00, 0x08, CMD_WRITE, 0x13, 0x83};
char WriteComCred[] = {0x00, 0x0a, CMD_WRITE, 0x16, 0x07};


char route[] = {0x00, 0x13, CMD_WRITE, 0x27, 0x00, 0xab, 0xcd, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x12, 0x60, 0x00, 0x01};
/////////////////////
// ROLE CMDS ////////
/////////////////////

char WriteRole[] = {0x00, 0x01, CMD_WRITE, 0x19, 0x0B}; //FED, look the table below and change the last char

char router = 0x01;
char reed = 0x02;
char fed = 0x03;
char med = 0x04;
char sed = 0x05;
char leader = 0x06;

/* //CKS for WriteRole
  0 = Not Configured
  1 = Router -- CKS = 09
  2 = REED (Router Elegible End Device) -- CKS = 0A
  3 = FED (Full End Device) -- CKS = OB
  4 = MED (Minimal End Device) -- CKS = 0C
  5 = SED (Sleepy End Device) CKS = 0D
  6 = Leader -- CKS = 0E

  Modifications conditions
  Status must be none, except none - saved configuration. Also allowed when status is joined to trigger some
  role transition mechanisms (SED ? MED, SED ? FED, MED? FED).
*/

char ReadJoinCred[] = {0x00, 0x00, CMD_READ, 0x17, 0x06};
char WriteJoinCred[] = {0x00, 0x10, CMD_WRITE, 0x17, 0x69};
char CommissionerOn[] = {0x00, 0x00, CMD_WRITE, 0x1b, 0x0b}; 
char CommissionerOff[] = {0x00, 0x00, CMD_DELETE, 0x1b, 0x09};
char AddJoiner[] = {0x00, 0x18 ,0x10, 0x18, 0xC5,0x84, 0x04,0xD2, 0x00,0x00, 0x00,0x05,0xFC,0x38, 0x34, 0x30, 0x34, 0x44, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x35, 0x46, 0x43};
char AddBR[] = {0x00, 0x18 ,0x10, 0x18, 0xC5,0x84, 0x04,0xD2, 0x00,0x00, 0x00,0x07,0x09,0x38, 0x34, 0x30, 0x34, 0x44, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x35, 0x46, 0x43};	
	